#!/usr/bin/env ruby

# Author: James Psota
# File:   mpi_hostfile_for_slurm.rb 

# Copyright (c) 2024 James Psota
# __________________________________________

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.



require 'awesome_print'

VALID_HOST_BASENAMES = ['lanka'].freeze
DEBUG = false

def assert_env_var(var)
    raise "Invalid #{var} in environment. Is it set and exported?" if ENV[var].nil?
end

def main

    slurm_nodelist = ENV['SLURM_NODELIST']

    # error check
    if slurm_nodelist.nil? || slurm_nodelist.size == 0
        raise "Unable to find environment variable SLURM_NODELIST. Are you sure you are running on an appropriate system (e.g., lanka) and you've allocated slurm nodes using 'make salloc'?"
    end

    assert_env_var('MPI_HOSTFILE')

    # lanka[01-03]
    matcher = slurm_nodelist.match(/(.*)\[(.*)\]/)

    raise "Invalid hostname #{matcher[1]}. Only set env variable MPI_HOSTNAME for hosts that use slurm and require manual setting of MPI_HOSTNAME. Current list: #{VALID_HOST_BASENAMES}" unless VALID_HOST_BASENAMES.include?(matcher[1])
    node_range = matcher[2].split('-')
    full_range = Range.new(node_range[0], node_range[1])
    hostname = matcher[1]

    raise "Invalid/unsupported slurm nodelist. Expected something like lanka[01-03] but got #{slurm_nodelist}" if matcher.size != 3 || slurm_nodelist.match(',')

    if DEBUG
        puts slurm_nodelist
        puts matcher.inspect
        puts node_range.inspect
        puts full_range
    end

    File.open(ENV['MPI_HOSTFILE'], 'w') do |f|
        f.puts "# Automatically generated by #{$0} at #{Time.now}"
        full_range.each do |node|
            # add MPI procs per node limit only if it exists. I'm assuming a colon with nothing after it is ok.
            f.puts hostname + node + ':' + (ENV['MPI_PROCS_PER_NODE_LIMIT'] || '') 
        end
    end

end

main